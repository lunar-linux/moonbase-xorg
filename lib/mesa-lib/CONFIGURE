SUPPORTED_DRIVERS="i915 i965 nouveau r100 r200"
SUPPORTED_GALLIUM="i915 i965 nouveau r300 r600 radeonsi svga virgl"
SUPPORTED_VULKAN="amd intel"

make_drivers_checklist() {
  # For each locale, extract name, title and charmap information
  for driver in $SUPPORTED_DRIVERS; do
      title=$driver

    echo "\"$driver\" \"$title\" \"on\" "
  done
}

make_gallium_drivers_checklist() {
  # For each locale, extract name, title and charmap information
  for driver in $SUPPORTED_GALLIUM; do
      title=$driver

    echo "\"$driver\" \"$title\" \"on\" "
  done
}

make_vulkan_drivers_checklist() {
  # For each locale, extract name, title and charmap information
  for driver in $SUPPORTED_VULKAN; do
      title=$driver

    echo "\"$driver\" \"$title\" \"on\" "
  done
}

select_drivers() {
  BACKTITLE="MesaLib Configuration"
      TITLE="Dri Drivers Selection"
       HELP=""
  make_drivers_checklist | xargs  \
  dialog --backtitle "$BACKTITLE" \
         --title     "$TITLE"     \
         --stdout                 \
         --separate-output        \
         --checklist "$HELP"      \
         0 0 0
}

select_gallium_drivers() {
  BACKTITLE="Gallium Configuration"
      TITLE="Gallium Drivers Selection"
       HELP=""
  make_gallium_drivers_checklist | xargs \
  dialog --backtitle "$BACKTITLE" \
         --title     "$TITLE"     \
         --stdout                 \
         --separate-output        \
         --checklist "$HELP"      \
         0 0 0
}

select_vulkan_drivers() {
  BACKTITLE="Vulkan Configuration"
      TITLE="Vulkan Drivers Selection"
       HELP=""
  make_vulkan_drivers_checklist | xargs \
  dialog --backtitle "$BACKTITLE" \
         --title     "$TITLE"     \
         --stdout                 \
         --separate-output        \
         --checklist "$HELP"      \
         0 0 0
}

if ! grep -q "MESADRIVER=" $MODULE_CONFIG; then
  MESADRIVER=`select_drivers`
  set_module_config MESADRIVER "$MESADRIVER"
fi

if [[ -z "$(get_module_config CONFIGURED)" ]]; then
  message "${MESSAGE_COLOR}Gallium is an alternative to DRI and needed to do 3D acceleration on"
  message "nouveau, radeon(-hd), ati or Intel GMA (Poulsbo/Cedar Trail). However, Gallium is not"
  message "performing on Intel graphics (Any onboard Corei3/5/7, G25/33/45, pinetrail gfx)"
  message ""
  message "Open Source Drivers:"
  message "If you build for Intel DRI-based hardware, disable Gallium, llvm and enable libva, libXvMC."
  message "If you build for Intel CedarTrail or Poulsbo, enable Gallium, llvm, libXvMC, libvdpau."
  message "If you build for NVidia or Ati hardware, enable Gallium, llvm, libXvMC, libvdpau."
  message ""
  message "Binary / Proprietary Drivers:"
  message "If you build the NVIDIA binary driver, disable gallium, llvm and libXvMC."
  message "If you build the fglrx (radeon) binary driver, disable gallium, llvm, libvdpau and libXvMC."
  message "${DEFAULT_COLOR}"
fi

mquery GALLIUM "Enable Gallium renderer?" y "-D llvm=true" ""
# mquery doesn't return or set env's, so read out the result:
GALLIUM=`get_module_config GALLIUM`

if [[ $GALLIUM == y ]]; then
  if ! grep -q "GALLIUMDRIVER=" $MODULE_CONFIG; then
    GALLIUMDRIVER=`select_gallium_drivers`
    set_module_config GALLIUMDRIVER "$GALLIUMDRIVER"
  fi
fi

mquery VULKAN "Enable Vulkan renderer?" y "-D llvm=true" ""
# mquery doesn't return or set env's, so read out the result:
VULKAN=`get_module_config VULKAN`

if [[ $VULKAN == y ]]; then
  if ! grep -q "VULKANDRIVER=" $MODULE_CONFIG; then
    VULKANDRIVER=`select_vulkan_drivers`
    set_module_config VULKANDRIVER "$VULKANDRIVER"
  fi
fi

set_module_config CONFIGURED y
